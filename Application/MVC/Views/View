/******************************************************************************
** PROGRAMME                                                                 **
**                                                                           **
** Lieu      :  ETML                                                         **
** Auteur    :  Grp4                                                         **
** Date      :  04.03.2020                                                   **
**                                                                           **
** Modifications                                                             **
**   Auteur  :  Jordy Guzman                                                 **
**   Version :  1.0                                                          **
**   Date    :  13.03.2020                                                   **
**   Raisons :  Implementation of a query method                             **
**                                                                           **
**                                                                           **
******************************************************************************/

/******************************************************************************
** DESCRIPTION                                                               **
** View of the application.                                                  **     
******************************************************************************/

using System;
using System.Data;
using System.Linq;
using System.Windows.Forms;

public partial class View : Form
    {
        /// <summary>
        /// getter et setter
        /// </summary>
        public Controller Ctrler { get; set; }

        /// <summary>
        /// constructeur de View
        /// </summary>
        public View()
        {
            InitializeComponent();
        }

        /// <summary>
        /// execute on start
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void View_Load(object sender, System.EventArgs e)
        {

        }

        /// <summary>
        /// Fill the dataview with the datatable passed by parameter from model to controller to this method.
        /// </summary>
        /// <param name="dttblParam"></param>
        public void SetGridView(DataTable dttblParam)
        {
            dtgrdApplication.DataSource = dttblParam;
            dtgrdApplication.AutoResizeColumns(DataGridViewAutoSizeColumnsMode.AllCells);
        }
        
        // Fit the image on the screen for the price evolution, adjusting the datagrid to all content in its respective cells.
        public void SetItForImage(DataTable dttblParam)
        {
            dtgrdApplication.DataSource = dttblParam;
            for (int i = 0; i < dtgrdApplication.Columns.Count; i++)
            {
                if(dtgrdApplication.Columns[i] is DataGridViewImageColumn)
                {
                    //Resize the cell as needed and stretch each image to the size of the cell.
                    ((DataGridViewImageColumn)dtgrdApplication.Columns[i]).ImageLayout = DataGridViewImageCellLayout.Stretch;
                }
            }
            dtgrdApplication.AutoResizeColumns(DataGridViewAutoSizeColumnsMode.AllCells);
        }

        /// <summary>
        /// Button that will search for a radiobutton checked then if it's true, it will uncheck it and show all of the phones characteristics. Calls the ctrler for the latter.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void BtnApplySearch_Click(object sender, EventArgs e)
        {
            foreach (RadioButton but in grpBoxSearch.Controls.OfType<RadioButton>())
            {
                if (but.Checked == true)
                {
                    but.Checked = false;
                    Ctrler.SetGrid();
                    break;
                }
            }
        }

        //These radio buttons are the ones that call the hard-coded queries.
        private void radBtnPriceEvolutionCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("PriceEvo");
        }


        private void radBtnOSCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("OS");
        }

        private void radBtnScreenSizeCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("Screen");
        }

        private void radBtnManufacturerCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("Manufacturer");
        }

        private void radBtnBestAutonomyCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("Battery");
        }

        private void radBtnMostExpensiveCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("Expensive");
        }

        private void radBtnBestCpuCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("CPU");
        }

        private void radBtnBestPhonesCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("Best");
        }

        private void radBtnCheapestCheck(object sender, EventArgs e)
        {
            Ctrler.SpecificQuery("Cheapest");
        }

        private void txtBoxSearchPhone(object sender, EventArgs e)
        {
            Ctrler.TextSearch(txtBoxSearchPhoneName.Text);
        }

        public void txtErase()
        {
            txtBoxSearchPhoneName.Clear();
        }
    }
